#chat-screen {
    background-color: #abc1d1;
    height: 1000vh;
}
#chat-screen .status-bar,
#chat-screen .alt-header {
    top: 0;
    position:sticky;
    width: 100%;
    background-color: #abc1d1;
    box-sizing: border-box;
}
#chat-screen .alt-header { /* .status-bar 의 z-index는 'status-bar.css'파일에 적용하였음. */
    top:10px;
    z-index: 1; /* z-index는 ps의 layer 개념으로 생각 하면 편함 */
    background-color:rgba(171, 193, 209, 0.9);
    /* #abc1d1의 rgb값을 적어서 opacity 90%줬음. */
}

@keyframes fadeIn {
    0% {
        transform: none;
        opacity: 0;
    }
    1% {
        transform: translateY(30px);
        opacity: 0;
    }
    100% {
        opacity: 1;
        transform: none;
    }
    
}

.main-chat {
    padding-top: 40px;
    display: flex;
    flex-direction: column;
    font-size: 14px;
    align-items: center;
    animation: fadeIn 0.78s linear;
}

.chat__timestamp {
    color: white;
    background-color: #92a4b2;
    padding: 15px 15px;
    border-radius: 25px;
    margin-bottom: 25px;
}

@keyframes fadeInRowUser {
    0% {
        transform: none;
        opacity: 0;
    }
    1% {
        transform: translateX(-200px);
        opacity: 0;
    }
    100% {
        transform: translateX(0px);
        opacity: 1;
    }
}

.message-row--user {
    animation: fadeInRowUser 0.8s linear;
}
.message-row {
    width: 100%;
    display: flex;
    margin-bottom: 25px;
}

.message-row img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin-right: 15px;
}
.message__info {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.message__author {
    margin-bottom: 5px;
    display: block;
}

.message__bubble {
    background-color: white;
    padding: 13px;
    font-size: 18px;
    border-radius: 15px;
    border-top-left-radius: 0px;
    margin-bottom: 5px;
    margin-right: 5px;
}

.message__author,
.message__time {
    opacity: 0.8;
    font-size: 13px;
}

.message__time {
    position: relative;
    align-self: flex-end;
    bottom: 20px;
    left: 35px;
}

@keyframes fadeInRowOwn {
    0% {
        transform: none;
        opacity: 0;
    }
    1% {
        transform: translateX(200px);
        opacity: 0;
    }
    100% {
        transform: translateX(0px);
        opacity: 1;
    }
}

.message-row--own {
    justify-content: flex-end;
    animation: fadeInRowOwn 0.8s linear;
}

.message-row--own .message__bubble {
    background-color: var(--yellow);
    border-top-right-radius: 0px;
    border-top-left-radius: 15px;
    margin-right: 0px;
    margin-left: 5px;
}

.message-row--own .message__info {
    flex-direction: row-reverse;
}

.message-row--own .message__time {
    top: -8px;
    left: -0px;
}

.reply {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: white;
    display: flex;
    justify-content: space-between;
    padding: 5px 25px;
    box-sizing: border-box;
    align-items: center;
    transition: transform .3s ease-in-out;
}

.reply .reply__column:first-child {
    width: 10%;
}
.reply .reply__column:last-child {
    width: 90%;
    position: relative;
}

.reply svg {
    opacity: 0.5;
}

.reply input {
    padding: 10px;
    width: 100%;
    border: var(--main-border);
    border-radius: 20px;
    box-sizing: border-box;
    transition: all .3s ease-in-out;
}

.reply__column:last-child > svg,
.reply__column:last-child button {
    position: absolute;
    right: 2px;
    top: 3px;
}

.reply__column:last-child > svg {
    right: 40px;
    top: 5px;
}

.reply__column button {
    background-color: var(--yellow);
    border: none;
    width: 30px;
    height: 30px;
    border-radius: 50%;
}

.reply__column button svg {
    opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
    outline: none;
}

.reply .reply__column:first-child,
.reply .reply__column__smile,
.reply button {
    transition: opacity 0.3s ease-in-out;
}

.reply:focus-within .reply__column:first-child,
.reply:focus-within .reply__column__smile,
.reply:focus-within button {
    opacity: 0;
}

.reply input:focus {
    width: 98vw;
    transform:translateX(-12%) translateY(-80px);
}

.reply:focus-within {
    transform:translateY(80px);
}